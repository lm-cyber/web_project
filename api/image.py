from fastapi import Depends, APIRouter, UploadFile

from sqlalchemy.orm import Session

from fastapi.responses import Response
from crud import image_crud
from db import get_session
from models import NewImageModel, ImageModel, ImageProductId
from fastapi import File

image_router = APIRouter()

@image_router.get("/image/")
async def get_image(session: Session = Depends(get_session), id: int = None):
    if id:
        return await image_crud.get(session, id)
    return await image_crud.get_all(session)


@image_router.post("/image/")
async def add_image(product_id: int, file_bytes: bytes = File(), session: Session = Depends(get_session)):
    await image_crud.create(session,product_id, file_bytes)
    return
    # return {
    #     "data":base64.b64encode(file_bytes)}


@image_router.get(
    "/image_test",

    # Set what the media type will be in the autogenerated OpenAPI specification.
    # fastapi.tiangolo.com/advanced/additional-responses/#additional-media-types-for-the-main-response
    responses = {
        200: {
            "content": {"image/png": {}}
        }
    },

    # Prevent FastAPI from adding "application/json" as an additional
    # response media type in the autogenerated OpenAPI specification.
    # https://github.com/tiangolo/fastapi/issues/3258
    response_class=Response
)
async def get_image(id: int = None, session: Session = Depends(get_session)):
    if id:
        image_bytes = (await image_crud.get(session, id)).image
    else:
        image_bytes: bytes = (await image_crud.get_all(session))[0].image
    # media_type here sets the media type of the actual response sent to the client.
    return Response(content=image_bytes, media_type="image/png")

@image_router.get(
    "/image_test_list",

    # Set what the media type will be in the autogenerated OpenAPI specification.
    # fastapi.tiangolo.com/advanced/additional-responses/#additional-media-types-for-the-main-response
    responses = {
        200: {
            "content": {"image/png": {}}
        }
    },

    # Prevent FastAPI from adding "application/json" as an additional
    # response media type in the autogenerated OpenAPI specification.
    # https://github.com/tiangolo/fastapi/issues/3258
    response_class=Response
)
async def get_image(id: int = None, session: Session = Depends(get_session)):
    if id:
        image_bytes = (await image_crud.get(session, id)).image
    else:
        image_bytes: bytes = (await image_crud.get_all(session))[0].image
    # media_type here sets the media type of the actual response sent to the client.
    return Response(content=image_bytes, media_type="image/png")
